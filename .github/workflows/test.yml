name: 🧪 Run Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', '3.11', '3.12']

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐍 Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: 🧪 Run tests
      run: |
        python -m unittest test_convert_apple_workouts -v

    - name: 🔍 Run basic smoke test
      run: |
        python convert_apple_workouts.py --help

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: 🔍 Check Python syntax
      run: |
        python -m py_compile convert_apple_workouts.py
        python -m py_compile test_convert_apple_workouts.py
        
    - name: 📊 Check code structure
      run: |
        # Basic checks for code quality
        echo "Checking for TODO/FIXME comments..."
        grep -n "TODO\|FIXME" *.py || echo "No TODOs found ✅"
        
        echo "Checking file sizes..."
        wc -l *.py
        
        echo "Checking for basic Python best practices..."
        python -c "
import ast
import sys

def check_file(filename):
    with open(filename, 'r') as f:
        try:
            tree = ast.parse(f.read())
            print(f'✅ {filename}: Valid Python syntax')
        except SyntaxError as e:
            print(f'❌ {filename}: Syntax error - {e}')
            sys.exit(1)

check_file('convert_apple_workouts.py')
check_file('test_convert_apple_workouts.py')
print('All syntax checks passed!')
"